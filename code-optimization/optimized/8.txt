// UserServices.java
@Component
public class UserServices {
    @Autowired
    private UserRepository userRepository;

    // Get All Users
    public List<User> getAllUser() {
        return (List<User>) this.userRepository.findAll();
    }

    // Get Single User
    public User getUser(int id) {
        Optional<User> optional = this.userRepository.findById(id);
        return optional.orElse(null);
    }

    // Get Single User By Email
    public User getUserByEmail(String email) {
        return this.userRepository.findUserByUemail(email);
    }

    // Update
    public void updateUser(User user, int id) {
        user.setU_id(id);
        this.userRepository.save(user);
    }

    // Delete Single User
    public void deleteUser(int id) {
        this.userRepository.deleteById(id);
    }

    // Add User
    public void addUser(User user) {
        this.userRepository.save(user);
    }

    // Validate Login Credentials
    public boolean validateLoginCredentials(String email, String password) {
        User user = this.userRepository.findUserByUemailAndUpassword(email, password);
        return user != null;
    }
}

// UserRepository.java
import org.springframework.data.jpa.repository.JpaRepository;
import com.business.entities.User;

public interface UserRepository extends JpaRepository<User, Integer> {
    User findUserByUemail(String email);
    User findUserByUemailAndUpassword(String email, String password);
}

public void changeTheme(boolean dark) {
    stageManager = SpringUtils.getBean(StageManager.class);
    String theme;
    String path = "/styles/theme/";
    if (dark) {
        stageManager.getDecorator().initTheme(GNDecorator.Theme.DARKULA);
        theme = "dark.css";
    } else {
        stageManager.getDecorator().initTheme(GNDecorator.Theme.DEFAULT);
        theme = "light.css";
    }

    ObservableList<String> stylesheets = stageManager.getDecorator().getStage().getScene().getStylesheets();
    stylesheets.clear();
    stylesheets.addAll(
        getClass().getResource(path + "fonts.css").toExternalForm(),
        getClass().getResource(path + "material-color.css").toExternalForm(),
        getClass().getResource(path + "skeleton.css").toExternalForm(),
        getClass().getResource(path + "" + theme).toExternalForm(),
        getClass().getResource(path + "bootstrap.css").toExternalForm(),
        getClass().getResource(path + "simple-green.css").toExternalForm(),
        getClass().getResource(path + "shape.css").toExternalForm(),
        getClass().getResource(path + "typographic.css").toExternalForm(),
        getClass().getResource(path + "helpers.css").toExternalForm(),
        getClass().getResource(path + "master.css").toExternalForm()
    );
}

public void invertTheme(boolean dark) {
    stageManager = SpringUtils.getBean(StageManager.class);
    String theme;
    String path = "/styles/theme/";
    if (dark) {
        stageManager.getDecorator().initTheme(GNDecorator.Theme.DARKULA);
        theme = "dark.css";
        btn_theme.setText("Theme dark : activated");
        invert = true;
    } else {
        stageManager.getDecorator().initTheme(GNDecorator.Theme.DEFAULT);
        theme = "light.css";
        btn_theme.setText("Theme dark : deactivated");
        invert = false;
    }

    ObservableList<String> stylesheets = stageManager.getDecorator().getStage().getScene().getStylesheets();
    stylesheets.clear();
    stylesheets.addAll(
        getClass().getResource(path + "fonts.css").toExternalForm(),
        getClass().getResource(path + "material-color.css").toExternalForm(),
        getClass().getResource(path + "skeleton.css").toExternalForm(),
        getClass().getResource(path + "" + theme).toExternalForm(),
        getClass().getResource(path + "bootstrap.css").toExternalForm(),
        getClass().getResource(path + "simple-green.css").toExternalForm(),
        getClass().getResource(path + "shape.css").toExternalForm(),
        getClass().getResource(path + "typographic.css").toExternalForm(),
        getClass().getResource(path + "helpers.css").toExternalForm(),
        getClass().getResource(path + "master.css").toExternalForm()
    );

    MainController.popConfig.hide();

    Platform.runLater(() -> {
        // Force pop's transition
        MainController.popup.getRoot().getStylesheets().remove(MainController.popup.getRoot().getStylesheets().size() - 1);
        MainController.popConfig.getRoot().getStylesheets().remove(MainController.popConfig.getRoot().getStylesheets().size() - 1);

        MainController.popup.getRoot().getStylesheets().add(path + "pop" + theme);
        MainController.popConfig.getRoot().getStylesheets().add(path + "pop" + theme);
    });
}
